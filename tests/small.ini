;; Small training test

[vars]
; testing variable substitution
parent_dir="tests/outputs"
output_dir="{parent_dir}/{NM_EXPERIMENT_NAME}"
drop_keep_p=0.5
dropout=$drop_keep_p
bleu=<bleu>

[main]
name="translation at {TIME} with {dropout:.2f} dropout"
output="{output_dir}"
overwrite_output_dir=True
batch_size=16
epochs=2
train_dataset=<train_data>
val_dataset=<val_data>
trainer=<trainer>
runners=[<runner>]
postprocess=None
evaluation=[("target", $bleu), ("target", evaluators.TER), ("target", evaluators.ChrF3)]
logging_period=20
validation_period=60
runners_batch_size=1
random_seed=4321

[bleu]
class=evaluators.BLEUEvaluator

[train_data]
; This is a definition of the training data object. Dataset is not a standard
; class, it treats the __init__ method's arguments as a dictionary, therefore
; the data series names can be any string, prefixed with "s_". To specify the
; output file for a series, use "s_" prefix and "_out" suffix, e.g.
; "s_target_out"
class=dataset.from_files
s_source="tests/data/train.tc.en"
s_target="tests/data/train.tc.de"
preprocessors=[("source", "source_chars", processors.helpers.preprocess_char_based)]
lazy=True

[val_data]
class=dataset.from_files
s_source="tests/data/val.tc.en"
s_target="tests/data/val.tc.de"
preprocessors=[("source", "source_chars", processors.helpers.preprocess_char_based)]

[encoder_vocabulary]
class=vocabulary.from_wordlist
path="tests/outputs/vocab/encoder_vocab.tsv"

[my_encoder]
class=encoders.SentenceEncoder
rnn_size=7
max_input_len=5
embedding_size=11
dropout_keep_prob=$drop_keep_p
data_id="source"
vocabulary=<encoder_vocabulary>
rnn_cell="NematusGRU"
embedding_initializer=<embedding_initializer>

[embedding_initializer]
class=tf.random_uniform_initializer
minval=-0.5
maxval=0.5

[my_attention]
class=attention.Attention
encoder=<my_encoder>
initializers=[("Attention/attn_query_projection", <query_projection_initializer>)]

[query_projection_initializer]
class=tf.random_normal_initializer
stddev=0.001

[decoder_vocabulary]
class=vocabulary.from_wordlist
path="tests/outputs/vocab/decoder_vocab.tsv"

[my_decoder]
class=decoders.Decoder
conditional_gru=True
encoders=[<my_encoder>]
attentions=[<my_attention>]
rnn_size=8
embedding_size=9
dropout_keep_prob=$drop_keep_p
data_id="target"
max_output_len=1
vocabulary=<decoder_vocabulary>
attention_on_input=False
rnn_cell="NematusGRU"

[trainer]
class=trainers.CrossEntropyTrainer
decoders=[<my_decoder>]
clip_norm=1.0
regularizers=[<train_l2>]

[train_l2]
class=trainers.regularizers.L2Regularizer
weight=1.0e-8

[runner]
class=runners.GreedyRunner
decoder=<my_decoder>
output_series="target"
